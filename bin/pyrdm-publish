#!/usr/bin/env python

#    Copyright (C) 2014 Christian T. Jacobs, Alexandros Avdis, Gerard J. Gorman, Matthew D. Piggott.

#    This file is part of PyRDM.

#    PyRDM is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    PyRDM is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with PyRDM.  If not, see <http://www.gnu.org/licenses/>.

import sys, os, glob
import ConfigParser
import argparse
import re

import git
from xml.dom import minidom

pyrdm_path = os.path.join(os.path.realpath(os.path.dirname(__file__)), os.pardir)
sys.path.insert(0, pyrdm_path)

from pyrdm.publisher import Publisher

class PyRDMPublish:

   def __init__(self):
      return

   def publish(self, path, version=None, private=False):
      """ Publish the PyRDM source code. """

      self.publisher = Publisher(service="dspace")

      # Publish the software
      pid, doi = self.publisher.publish_software(name="PyRDM", local_repo_location=path, version=version, private=private, collection_title="Private Collection")
      print "PyRDM has been published. Publication ID: %s, DOI: %s" % (pid, doi)

      return
         
if(__name__ == "__main__"):
   # Parse the command line arguments
   usage = "Usage: %prog [options] path_to_local_pyrdm_git_repository"
   parser = argparse.ArgumentParser(prog="pyrdm-publish", description="Publishes the PyRDM source code to an online citable repository.")
   parser.add_argument("-v", "--version", help="Publish a specific version of the PyRDM source code identified by a given SHA-1 hash.", action="store", type=str, default=None, metavar="HASH")
   parser.add_argument("path", help="The path to the local Git repository of PyRDM on your file system.", action="store", type=str)
   args = parser.parse_args()
   
   if(os.path.exists(args.path)):
      rdm = PyRDMPublish()
      rdm.publish(path = args.path, version = args.version, private=True)
   else:
      print "The path to the local PyRDM directory does not exist."
      sys.exit(1)
   
